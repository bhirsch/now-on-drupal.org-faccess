<?php
// $Id $

/**
 * @file
 *  faccess.module 
 */

/**
 * Implementation of hook_menu().
 */
function faccess_menu() {
  $items = array();

  $items['admin/settings/faccess'] = array(
    'title' => t('Feature Access'), 
    'description' => t('Show/Hide features to users without "administer features" permissions'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('faccess_admin_settings'),
    'access arguments' => array('administer feature access'), 
    'type' => MENU_NORMAL_ITEM,
    'file' => 'faccess.admin.inc', 
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function faccess_perm() {
  return array('administer feature access');  
}

/**
 * Implementation of hook_form_alter().
 */
function faccess_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'features_admin_form') {
    // Figure out which features have restricted access. 
    $features = features_get_features();
    foreach($features as $feature) {
      $var = 'faccess_'. $feature->name;
      $restricted = variable_get($var, FALSE);
      // Alter form for restricted features.
      if ($restricted) {
        $name = $feature->name;
        $action = t(variable_get($var .'_action', 'Not Available'));
        $url = variable_get($var .'_url', NULL);
        $package_title = $feature->info['package'];
        $package = strtolower(preg_replace('/[^a-zA-Z0-9-]+/', '-', $package_title));
        $form[$package]['status'][$name]['#access'] = FALSE; 
        $form[$package]['actions'][$name]['#value'] = '<a href="'. $url .'" class="admin-update" target="_blank">'. $action .'</a>'; 
      }
    }
  }
}

/**
 * Programatically deny access to feature module.
 *  
 * @param
 *  $params, array('module' => 'mymodule', 
 *                 'action' => 'text for action link', 
 *                 'url' => 'http://example.com');
 */
function faccess_deny($params) {
  // Set $element variable, faccess_mymodule.
  $element = "faccess_". $params['module'];
  variable_set($element, TRUE); // true -> deny access.
  // Set $action variable, faccess_mymodule_action.
  $action =  $element ."_action";
  variable_set($action, $params['action']);
  // Set $url variable, faccess_mymodule_url.
  $url = $element ."_url";
  variable_set($url, $params['url']);
}

/**
 * Programatically grant access to feature module.
 *  
 * @param
 *  $module, string, mymodule.
 */
function faccess_grant($module) {
  // Set $element variable, faccess_mymodule.
  $element = "faccess_". $module;
  variable_set($element, FALSE); // deny access = false
  // Set $action variable, faccess_mymodule_action.
  $action =  $element ."_action";
  variable_set($action, NULL); 
  // Set $url variable, faccess_mymodule_url.
  $url = $element ."_url";
  variable_set($url, NULL); 
}
